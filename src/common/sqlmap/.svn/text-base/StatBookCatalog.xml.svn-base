<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" 
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="StatBookCatalog">
	<resultMap class="cn.com.twsm.common.dto.StatBookCatalogDTO" id="statBookCatalog">
		<!-- 
		<result column="STAT_ID" property="id" jdbcType="NUMBER"/>
		 -->
		<result column="BOOK_CATALOG_ID" property="bookCatalogId" jdbcType="NUMBER"/>
		<result column="BOOK_TOTAL" property="bookTotal" jdbcType="NUMBER"/>
		<result column="UP_STACK_TOTAL" property="upStackTotal" jdbcType="NUMBER"/>
		<result column="BROWSE_COUNT" property="browseCount" jdbcType="NUMBER"/>
		<result column="DOWNLOAD_COUNT" property="downloadCount" jdbcType="NUMBER"/>
		<result column="READ_COUNT" property="readCount" jdbcType="NUMBER"/>
		<result column="ADD_TIME" property="addTime" jdbcType="NUMBER"/>
		<result column="YEAR" property="year" jdbcType="CHAR"/>
		<result column="MONTH" property="month" jdbcType="CHAR"/>
		<result column="DAY" property="day" jdbcType="CHAR"/>
	</resultMap>
	<resultMap class="cn.com.twsm.common.dto.StatBookCatalogDTO" id="statBookCatalog1">
		<result column="BOOK_CATALOG_ID" property="bookCatalogId" jdbcType="NUMBER"/>
		<result column="YEAR" property="year" jdbcType="CHAR"/>
		<result column="MONTH" property="month" jdbcType="CHAR"/>
		<result column="BOOK_MONTH_TOTAL" property="bookMonthTotal" jdbcType="NUMBER"/>
		<result column="UP_STACK_MONTH_TOTAL" property="upStackMonthTotal" jdbcType="NUMBER"/>
		<result column="BROWSE_MONTH_COUNT" property="browseMonthCount" jdbcType="NUMBER"/>
		<result column="DOWNLOAD_MONTH_COUNT" property="downloadMonthCount" jdbcType="NUMBER"/>
		<result column="READ_MONTH_COUNT" property="readMonthCount" jdbcType="NUMBER"/>
	</resultMap>
	<sql id="whereCondition">
        <dynamic>
             <isNotEmpty prepend="AND" property="bookCatalogId">             
                BOOK_CATALOG_ID = #bookCatalogId#
            </isNotEmpty>
        </dynamic>
        <dynamic>
             <isNotEmpty prepend="AND" property="day">             
                DAY = #day#
            </isNotEmpty>
        </dynamic>
        <dynamic>
             <isNotEmpty prepend="AND" property="year">             
                YEAR = #year#
            </isNotEmpty>
        </dynamic>
        <dynamic>
             <isNotEmpty prepend="AND" property="month">             
                MONTH = #month#
            </isNotEmpty>
        </dynamic>
    </sql>
    <select id="getByMonth" resultMap="statBookCatalog1" parameterClass="map">
		SELECT C.MONTH MONTH,C.BOOK_CATALOG_ID, NVL(D.BOOK_TOTAL, 0) BOOK_MONTH_TOTAL, NVL(D.UP_STACK_TOTAL, 0) UP_STACK_MONTH_TOTAL, C.BROWSE_MONTH_COUNT, C.DOWNLOAD_MONTH_COUNT, C.READ_MONTH_COUNT, C.YEAR
  FROM ((
          SELECT A.MONTH MONTH,
               #bookCatalogId# BOOK_CATALOG_ID,
               NVL(SUM(BROWSE_COUNT), 0) BROWSE_MONTH_COUNT,
               NVL(SUM(DOWNLOAD_COUNT), 0) DOWNLOAD_MONTH_COUNT,
               NVL(SUM(READ_COUNT), 0) READ_MONTH_COUNT,
               A.YEAR YEAR
          FROM STAT_BOOK_CATALOG B
         RIGHT JOIN (SELECT YEAR, MONTH, DAY FROM CODE_DAY WHERE YEAR = #year#) A ON A.YEAR =
                                                                                   B.YEAR
                                                                               AND A.MONTH =
                                                                                   B.MONTH
                                                                               AND A.DAY =
                                                                                   B.DAY
                                                                               AND B.BOOK_CATALOG_ID =
                                                                                   #bookCatalogId#
         GROUP BY A.MONTH,A.YEAR
         ORDER BY A.MONTH) C
  
  LEFT JOIN 
  
  (SELECT *
               FROM STAT_BOOK_CATALOG
              WHERE DAY = substr(LAST_DAY(to_date(STAT_BOOK_CATALOG.Year || '-' ||
                                                  STAT_BOOK_CATALOG.Month,
                                                  'yyyy-mm')),
                                 0,
                                 2)) D 
    ON C.BOOK_CATALOG_ID = D.BOOK_CATALOG_ID AND C.MONTH = D.MONTH  AND C.YEAR = D.YEAR)
	</select>
	<select id="getByWhere" resultMap="statBookCatalog" parameterClass="map">
		SELECT 
      a.DAY DAY,
      ADD_TIME,
      NVL(BOOK_TOTAL,0) BOOK_TOTAL,
      #bookCatalogId# BOOK_CATALOG_ID,
      NVL(UP_STACK_TOTAL,0) UP_STACK_TOTAL,
      NVL(BROWSE_COUNT,0) BROWSE_COUNT,
      NVL(DOWNLOAD_COUNT,0) DOWNLOAD_COUNT,
      NVL(READ_COUNT,0) READ_COUNT,
      A.MONTH,
      A.YEAR
      FROM (SELECT DAY,YEAR,MONTH
              FROM CODE_DAY t
             WHERE YEAR = #year#
               AND MONTH = #month#) a
      LEFT JOIN STAT_BOOK_CATALOG b ON a.DAY = b.DAY AND a.YEAR = b.YEAR AND A.MONTH = b.MONTH
                            AND b.BOOK_CATALOG_ID = #bookCatalogId#
     ORDER BY DAY ASC
	</select>
	<select id="getById" resultMap="statBookCatalog" parameterClass="Integer">
			SELECT 
				STAT_ID,
				BOOK_CATALOG_ID,
				BOOK_TOTAL,
				UP_STACK_TOTAL,
				BROWSE_COUNT,
				DOWNLOAD_COUNT,
				READ_COUNT,
				ADD_TIME,
				YEAR,
				MONTH,
				DAY
			FROM 
				STAT_BOOK_CATALOG
			WHERE 
				STAT_ID = #id#
	</select>

	<insert id="insert" parameterClass="cn.com.twsm.common.dto.StatBookCatalogDTO">
		<selectKey resultClass="int" keyProperty="id">
            select SEQ_STAT_BOOK_CATALOG.NEXTVAL from dual
        </selectKey>
		INSERT INTO STAT_BOOK_CATALOG(STAT_ID,BOOK_CATALOG_ID,BOOK_TOTAL,UP_STACK_TOTAL,BROWSE_COUNT,DOWNLOAD_COUNT,READ_COUNT,ADD_TIME,YEAR,MONTH,DAY)
		VALUES(#id#,#bookCatalogId#,#bookTotal#,#upStackTotal#,#browseCount#,#downloadCount#,#readCount#,#addTime#,#year#,#month#,#day#)
	</insert>
</sqlMap>